{"version":3,"sources":["JScomponents/stopwatch/Stopwatch.js","Pages/Home/Home.js","JScomponents/stopwatch2_0/stopwatch2_0.js","Pages/Stopwatchpro/Stopwatchpro.js","JScomponents/sapper/Sapper.js","Pages/SapperPage/SaperPage.js","layouts/MeinMenu/MeinMenu.js","layouts/Header/Header.js","App/App.js","reportWebVitals.js","index.js"],"names":["Stopwatch","props","ComandWatch","Comand","Timer","setState","hour","min","second","StartStop","setTimeout","state","prevstate","subscription","Observable","create","observer","timer","clearInterval","subscribe","val","console","log","err","error","unsubscribe","onClick","e","clearTimeout","Click","className","this","Component","Home","stopwatch2_0","Save","list","time","Del","fid","map","key","Stopwatchpro","Sapper","SpaseLeft","textSize","textBomb","atantion","Array","firstClick","doubleclick","win","faile","tapS","target","value","tapB","CreateArray","NaN","arry","Create2DArray","i","a","y","x","Bomb","Number","CanBeBomb","ClassB","count","Flag","Mis","ClickOnBut","CreateBomb","Math","floor","random","rows","arr","type","onChange","items","item","SaperPage","MeinMenu","exact","path","render","SapperPage","Header","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.86f7c394.chunk.js","sourcesContent":["import React,{Component} from 'react'\r\nimport { Observable } from 'rxjs';\r\n\r\nimport './stopwatch.css'\r\n\r\nclass Stopwatch extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hour:0,\r\n      min: 0,\r\n      second: 0,\r\n      StartStop: \"START\",//fo check works of Stopwatch (Для проверки работы секундомера)\r\n      Click: false, //for double click function (Для двойного нажатия)\r\n    };\r\n  }\r\n  \r\n  \r\n  ComandWatch=(Comand)=>{// controler for more comfortable using timer (Для удбства работы с методом Time())\r\n    if(Comand===\"START\"){ // if Comand==\"START\" we jast starting timer (если Comand==\"START\" просто запускаем таймер)\r\n     this.Timer(Comand)\r\n    }\r\n    else if(Comand===\"STOP\"){// if \"STOP\" we are stoping timer and make time=0 (если \"STOP\" стоп мы обнуляем и останавливаем тамер)\r\n      this.Timer(Comand)\r\n      this.setState({\r\n        hour:0,\r\n        min: 0,\r\n        second: 0,\r\n        StartStop: \"START\" \r\n    });\r\n    }\r\n    else if (Comand===\"RESTART\"){ // if \"RRESTART\" time=0 but timer is not stoping(если \"RRESTART\" мы обнуляем время но не останавливаем таймер)\r\n      \r\n      this.setState({\r\n        hour:0,\r\n        min: 0,\r\n        second: 0,\r\n      });\r\n      this.Timer(\"START\")\r\n    }\r\n  }\r\n  Timer=(Comand)=>{//Timer\r\n    if(Comand===\"WAIT\"){//if Command=\"WAIT\" tamer is stoping, it becam when doubleClcki is using(если Command=\"WAIT\" таймер останвливается просходит при двойном нажатии)\r\n      this.setState({\r\n        StartStop: \"START\" //if StartStop==\"START\" timer is stoped(если StartStop==\"START\" таймер стоит)\r\n      })\r\n      this.Timer(null)   // and we restart timer with Comand=null(ну и наоборот, так сделано чтобы сразу можно было подписать кнопку)\r\n    }\r\n    else if(Comand===\"START\"){//if START(это для START)\r\n      this.setState({\r\n        StartStop: \"STOP\" //if StartStop==\"STOP\" timer is runing(если StartStop==\"STOP\" таймер идет)\r\n      })\r\n      setTimeout(()=>this.Timer(null), 1000);// and we restart timer with Comand=null ( и перезапускается с параметром Comand=null)\r\n    }\r\n    else if (Comand === null){//if Comand null it's meen thet one comand was activete( Если Comand=null, это значит что таймер либо работает либо одна с команд была активирована)\r\n      if(this.state.StartStop===\"STOP\"){//if StartStop=\"STOP\" timer is working(если StartStop=\"STOP\" то таймер в стационарном робочем режиме)\r\n// here we have manipulations with time(тут мы делаем счет времени)\r\n        if(this.state.min>=59){\r\n          this.setState((prevstate) => {\r\n            return {\r\n              min: 0,\r\n              hour:prevstate.hour+1\r\n            };\r\n          });\r\n        }\r\n        else{\r\n          if(this.state.second>=59){\r\n            this.setState((prevstate) => {\r\n              return {\r\n                second: 0,\r\n                min:prevstate.min+1\r\n              };\r\n            });\r\n          }\r\n          else {\r\n            this.setState((prevstate) => {\r\n              return {\r\n                second: prevstate.second+1\r\n              };\r\n            });\r\n          }\r\n        }\r\n        \r\n        const source = Observable.create((observer) => {// here we restar timer and try to catch err, it was part of task(тут перезапускаем таймер и ловим ошибки)\r\n          \r\n          const timer = setTimeout(() => {\r\n              this.Timer(null)\r\n          }, 1000);\r\n      \r\n          return () => {\r\n            \r\n              clearInterval(timer);\r\n          } \r\n      });\r\n      const subscription = source.subscribe(\r\n        val => console.log('next:', val),\r\n        err => console.error('error:', err),\r\n        () => console.log('completed')\r\n      )\r\n      setTimeout(() => subscription.unsubscribe(), 4500); \r\n      }\r\n    }\r\n  }\r\n  onClick=(e) => { //double click function(двойное нажатие)\r\n    clearTimeout(this.timer); \r\n      if(this.state.Click===false){// if Click falls(если Click falls)\r\n      this.setState({\r\n          Click:true// Click becam true(он становится true)\r\n      });\r\n      this.timer = setTimeout(() => { \r\n        this.setState({\r\n          Click:false\r\n      });\r\n      }, 200);//and Click staeing true 200 second then becam false(если мы не кликнем в тичении 200 милесикунд он вернется в исхдное положение)\r\n    }\r\n    else{\r\n      clearTimeout(this.timer); \r\n      setTimeout(()=>this.Timer(\"WAIT\"));// but if user click in 200, he activate Timer() and send parammeter \"WAIT\"(но если мы нажмем то двойное нажатие засчитается)\r\n      this.setState({\r\n        Click:false,\r\n      });\r\n    }\r\n    \r\n}\r\n  render(){\r\n    return (\r\n      <div className=\"stopwatch\">\r\n        <div className=\"stopwatch_timer\">\r\n          {this.state.hour}:{this.state.min}:{this.state.second}\r\n        </div>\r\n        <div className=\"stopwatch_buttons\">\r\n            <button onClick={()=>this.ComandWatch(this.state.StartStop)}>\r\n              {\r\n                this.state.StartStop\r\n              }\r\n            </button>\r\n            <button onClick={()=>this.onClick()}>\r\n              WAIT\r\n            </button>\r\n            <button onClick={()=>this.ComandWatch(\"RESTART\")}>\r\n              RESTART\r\n            </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  export default Stopwatch;\r\n  ","import React from 'react';\r\nimport Stopwatch from '../../JScomponents/stopwatch/Stopwatch'\r\nimport './Home.css'\r\n\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"Home\">\r\n        <Stopwatch />\r\n        <div>\r\n          Иза того что я уже вам делал именно это тестовое задание (на позицию мидл)\r\n          то здесь я решил добавитьеще коечто от себя (а именно улучшенный секундомер, и сапер с таймером)\r\n          просто сдавать одно и тоже как-то не культурно и при попытке связатся с HR у меня не получилось дозвонится\r\n          и так вышло что когда ко мне звонили я не мог взять трубку.\r\n          Если вас интересует только сам Секундомер (ТЗ) то переходите по пути src/JScomponents/stopwatch/stopwatch\r\n          Сам он вызывается с Компонента Home\r\n        </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React,{Component} from 'react'\r\nimport { Observable } from 'rxjs';\r\n\r\nimport './stopwatch2_0.css'\r\n/*\r\nТот же секундомер только с возможностью save\r\n*/ \r\nclass stopwatch2_0 extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hour:0,\r\n      min: 0,\r\n      second: 0,\r\n      fid:0,\r\n      list:[],//для сейва\r\n      StartStop: \"START\",//fo check works of Stopwatch (Для проверки работы секундомера)\r\n      Click: false, //for double click function (Для двойного нажатия)\r\n    };\r\n  }\r\n  \r\n  \r\n  ComandWatch=(Comand)=>{// controler for more comfortable using timer (Для удбства работы с методом Time())\r\n    if(Comand===\"START\"){ // if Comand==\"START\" we jast starting timer (если Comand==\"START\" просто запускаем таймер)\r\n     this.Timer(Comand)\r\n    }\r\n    else if(Comand===\"STOP\"){// if \"STOP\" we are stoping timer and make time=0 (если \"STOP\" стоп мы обнуляем и останавливаем тамер)\r\n      this.Timer(Comand)\r\n      this.setState({\r\n        hour:0,\r\n        min: 0,\r\n        second: 0,\r\n        StartStop: \"START\",\r\n        \r\n        \r\n    });\r\n    }\r\n    else if (Comand===\"RESTART\"){ // if \"RRESTART\" time=0 but timer is not stoping(если \"RRESTART\" мы обнуляем время но не останавливаем таймер)\r\n      \r\n      this.setState({\r\n        hour:0,\r\n        min: 0,\r\n        second: 0,\r\n      });\r\n      this.Timer(\"START\")\r\n    }\r\n  }\r\n  Timer=(Comand)=>{//Timer\r\n    if(Comand===\"WAIT\"){//if Command=\"WAIT\" tamer is stoping, it becam when doubleClcki is using(если Command=\"WAIT\" таймер останвливается просходит при двойном нажатии)\r\n      this.setState({\r\n        StartStop: \"START\" //if StartStop==\"START\" timer is stoped(если StartStop==\"START\" таймер стоит)\r\n      })\r\n      this.Timer(null)   // and we restart timer with Comand=null(ну и наоборот, так сделано чтобы сразу можно было подписать кнопку)\r\n    }\r\n    else if(Comand===\"START\"){//if START(это для START)\r\n      this.setState({\r\n        StartStop: \"STOP\" //if StartStop==\"STOP\" timer is runing(если StartStop==\"STOP\" таймер идет)\r\n      })\r\n      setTimeout(()=>this.Timer(null), 1);// and we restart timer with Comand=null ( и перезапускается с параметром Comand=null)\r\n    }\r\n    else if (Comand === null){//if Comand null it's meen thet one comand was activete( Если Comand=null, это значит что таймер либо работает либо одна с команд была активирована)\r\n      if(this.state.StartStop===\"STOP\"){//if StartStop=\"STOP\" timer is working(если StartStop=\"STOP\" то таймер в стационарном робочем режиме)\r\n// here we have manipulations with time(тут мы делаем счет времени)\r\n        if(this.state.min>=59){\r\n          this.setState((prevstate) => {\r\n            return {\r\n              min: 0,\r\n              hour:prevstate.hour+1\r\n            };\r\n          });\r\n        }\r\n        else{\r\n          if(this.state.second>=100){\r\n            this.setState((prevstate) => {\r\n              return {\r\n                second: 0,\r\n                min:prevstate.min+1\r\n              };\r\n            });\r\n          }\r\n          else {\r\n            this.setState((prevstate) => {\r\n              return {\r\n                second: prevstate.second+1\r\n              };\r\n            });\r\n          }\r\n        }\r\n        \r\n        const source = Observable.create((observer) => {// here we restar timer and try to catch err, it was part of task(тут перезапускаем таймер и ловим ошибки)\r\n          \r\n          const timer = setTimeout(() => {\r\n              this.Timer(null)\r\n          }, 1);\r\n      \r\n          return () => {\r\n            \r\n              clearInterval(timer);\r\n          } \r\n      });\r\n      const subscription = source.subscribe(\r\n        val => console.log('next:', val),\r\n        err => console.error('error:', err),\r\n        () => console.log('completed')\r\n      )\r\n      setTimeout(() => subscription.unsubscribe(), 4500); \r\n      }\r\n    }\r\n  }\r\n  onClick=(e) => { //double click function(двойное нажатие)\r\n    clearTimeout(this.timer); \r\n      if(this.state.Click===false){// if Click falls(если Click falls)\r\n      this.setState({\r\n          Click:true// Click becam true(он становится true)\r\n      });\r\n      this.timer = setTimeout(() => { \r\n        this.setState({\r\n          Click:false\r\n      });\r\n      }, 200);//and Click staeing true 200 second then becam false(если мы не кликнем в тичении 200 милесикунд он вернется в исхдное положение)\r\n    }\r\n    else{\r\n      clearTimeout(this.timer); \r\n      setTimeout(()=>this.Timer(\"WAIT\"));// but if user click in 200, he activate Timer() and send parammeter \"WAIT\"(но если мы нажмем то двойное нажатие засчитается)\r\n      this.setState({\r\n        Click:false,\r\n      });\r\n    }\r\n    \r\n}\r\n\r\n    Save=()=>{\r\n        this.setState((prevstate) => {\r\n            return {\r\n              \r\n              list:[\r\n                ...prevstate.list,\r\n                    {\r\n                        time:prevstate.hour+\":\"+prevstate.min+\":\"+prevstate.second\r\n                    }\r\n                ]\r\n            };\r\n          });\r\n    }\r\n    Del=()=>{\r\n        this.setState((prevstate) => {\r\n            return {\r\n              \r\n              list:[\r\n                ]\r\n            };\r\n          });\r\n    }\r\n  render(){\r\n    return (\r\n      <div className=\"stopwatch2_0\">\r\n        <div className=\"stopwatch2_0_timer\">\r\n          {this.state.hour}:{this.state.min}:{this.state.second}\r\n        </div>\r\n        <div className=\"stopwatch2_0_buttons\">\r\n            <button onClick={()=>this.ComandWatch(this.state.StartStop)}>\r\n              {\r\n                this.state.StartStop\r\n              }\r\n            </button>\r\n            <button onClick={()=>this.onClick()}>\r\n              WAIT\r\n            </button>\r\n            <button onClick={()=>this.ComandWatch(\"RESTART\")}>\r\n              RESTART\r\n            </button>\r\n            <button onClick={()=>this.Save()}>\r\n              SAVE\r\n            </button>\r\n            <button onClick={()=>this.Del()}>\r\n              DEL\r\n            </button>\r\n        </div>\r\n        <div className=\"stopwatch2_0_list\">\r\n        {\r\n          this.state.list.map((key)=>(\r\n                <div>\r\n                    {key.time}\r\n                </div>\r\n            ))\r\n        }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  export default stopwatch2_0;\r\n  ","import React from 'react';\r\nimport Stopwatch from '../../JScomponents/stopwatch2_0/stopwatch2_0'\r\nimport './Stopwatchpro.css'\r\n\r\n\r\nfunction Stopwatchpro() {\r\n  return (\r\n    <div className=\"Stopwatchpro\">\r\n        <Stopwatch/>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Stopwatchpro;\r\n","import React,{Component} from 'react'\r\nimport { Observable } from 'rxjs';\r\nimport './Sapper.css'\r\nimport './ButDecor.css'\r\n\r\n/**\r\n * Сапер\r\n * \r\n * Код с для таймера такойже как и в секундомере\r\n * \r\n */\r\n\r\nclass Sapper extends Component{\r\n\r\n    state={\r\n        SpaseLeft:\"\",//Для отслеживания прогреса к победе\r\n        textSize:\"\",// размер поля в квдрате\r\n        textBomb:\"\",// количество бомб\r\n        atantion:\"Classnone\",// клас для всплывающих окон\r\n        Array:[],//поле\r\n        firstClick: true,//самый первый клик на поле\r\n        doubleclick:false,//слежка для дблклик\r\n        //для выбора финального сценария\r\n        win:false,\r\n        faile:false,\r\n        //для таймера\r\n        hour:0,\r\n        min: 0,\r\n        second: 0,\r\n        fid:0,\r\n        list:[],\r\n        StartStop: \"START\",\r\n    }\r\n\r\n    \r\n\r\n    ComandWatch=(Comand)=>{// controler for more comfortable using timer (Для удбства работы с методом Time())\r\n        if(Comand===\"START\"){ // if Comand==\"START\" we jast starting timer (если Comand==\"START\" просто запускаем таймер)\r\n         this.Timer(Comand)\r\n        }\r\n        else if(Comand===\"STOP\"){// if \"STOP\" we are stoping timer and make time=0 (если \"STOP\" стоп мы обнуляем и останавливаем тамер)\r\n          this.Timer(Comand)\r\n          this.setState({\r\n            hour:0,\r\n            min: 0,\r\n            second: 0,\r\n            StartStop: \"START\",\r\n            \r\n            \r\n        });\r\n        }\r\n        \r\n      }\r\n      Timer=(Comand)=>{//Timer\r\n        if(Comand===\"START\"){//if START(это для START)\r\n          this.setState({\r\n            StartStop: \"STOP\" //if StartStop==\"STOP\" timer is runing(если StartStop==\"STOP\" таймер идет)\r\n          })\r\n          setTimeout(()=>this.Timer(null), 1);// and we restart timer with Comand=null ( и перезапускается с параметром Comand=null)\r\n        }\r\n        else if (Comand === null){//if Comand null it's meen thet one comand was activete( Если Comand=null, это значит что таймер либо работает либо одна с команд была активирована)\r\n          if(this.state.StartStop===\"STOP\"){//if StartStop=\"STOP\" timer is working(если StartStop=\"STOP\" то таймер в стационарном робочем режиме)\r\n    // here we have manipulations with time(тут мы делаем счет времени)\r\n            if(this.state.min>=59){\r\n              this.setState((prevstate) => {\r\n                return {\r\n                  min: 0,\r\n                  hour:prevstate.hour+1\r\n                };\r\n              });\r\n            }\r\n            else{\r\n              if(this.state.second>=100){\r\n                this.setState((prevstate) => {\r\n                  return {\r\n                    second: 0,\r\n                    min:prevstate.min+1\r\n                  };\r\n                });\r\n              }\r\n              else {\r\n                this.setState((prevstate) => {\r\n                  return {\r\n                    second: prevstate.second+1\r\n                  };\r\n                });\r\n              }\r\n            }\r\n            \r\n            const source = Observable.create((observer) => {// here we restar timer and try to catch err, it was part of task(тут перезапускаем таймер и ловим ошибки)\r\n              \r\n              const timer = setTimeout(() => {\r\n                  this.Timer(null)\r\n              }, 1);\r\n          \r\n              return () => {\r\n                \r\n                  clearInterval(timer);\r\n              } \r\n          });\r\n          const subscription = source.subscribe(\r\n            val => console.log('next:', val),\r\n            err => console.error('error:', err),\r\n            () => console.log('completed')\r\n          )\r\n          setTimeout(() => subscription.unsubscribe(), 4500); \r\n          }\r\n        }\r\n      }\r\n      \r\n    Save=()=>{\r\n        if(this.state.win){\r\n            this.setState((prevstate) => {\r\n                return {\r\n                  \r\n                  list:[\r\n                    ...prevstate.list,\r\n                        {\r\n                            time:prevstate.hour+\":\"+prevstate.min+\":\"+prevstate.second+\" ПОБЕДА \"+this.state.textSize+\"x\"+this.state.textSize+\" БОМБ \"+this.state.textBomb\r\n                        }\r\n                    ]\r\n                };\r\n              });\r\n        }\r\n        else{\r\n            this.setState((prevstate) => {\r\n                return {\r\n                  \r\n                  list:[\r\n                    ...prevstate.list,\r\n                        {\r\n                            time:prevstate.hour+\":\"+prevstate.min+\":\"+prevstate.second+\" ПРОИГРЫШ \"+this.state.textSize+\"x\"+this.state.textSize+\" БОМБ \"+this.state.textBomb\r\n                        }\r\n                    ]\r\n                };\r\n              });\r\n        }\r\n        \r\n    }    \r\n\r\n\r\n\r\n    tapS=(e)=>{//Здесь мы вводим размер\r\n        \r\n            this.setState({ \r\n                textSize:e.target.value\r\n            });\r\n            if(this.state.textSize<0)\r\n                this.setState((prevstate) => {//Следим чтобы размер не становился меньше 0\r\n                    return {\r\n                        textSize:0\r\n                    };\r\n                });\r\n    }\r\n    tapB=(e)=>{//Здесь количество бомб\r\n        \r\n            this.setState({ \r\n                textBomb:e.target.value\r\n            });\r\n            if(this.state.textBomb<0)\r\n                this.setState((prevstate) => {//Следим чтобы колчество бомб не становилось меньше 0\r\n                    return {\r\n                        textBomb:0\r\n                    };\r\n                });\r\n    }\r\n    Create2DArray(rows) {//Создаем дбл Массив\r\n        var arr = [];\r\n      \r\n        for (var i=0;i<rows;i++) {\r\n           arr[i] = [];\r\n        }\r\n      \r\n        return arr;\r\n      }\r\n    CreateArray=()=>{//Создаем поле\r\n        if(this.state.textSize>15||this.state.textSize<5||this.state.textSize===NaN)\r\n        {//Проверка поле недолжно быть больше 15 и меньше 5\r\n            this.setState({ \r\n                atantion:\"row_Array_atantion\"\r\n            });\r\n        }\r\n        else if(this.state.textBomb>this.state.textSize*this.state.textSize/2||this.state.textBomb===NaN||this.state.textBomb===0){\r\n            this.setState({ //Количество бомб недолжно быть больше this.state.textSize/2 и не 0\r\n                atantion:\"row_Array_atantion\"\r\n            });\r\n        }\r\n        else{//если все условия соблюдены то мы создаем поле но не заполняем бомбами\r\n            this.setState({ \r\n                atantion:\"Classnone\"\r\n            });\r\n            let arry = this.Create2DArray(this.state.textSize)\r\n            \r\n            \r\n            for(let i = 0 ;i<this.state.textSize;i++)\r\n                for(let a = 0 ;a<this.state.textSize;a++)\r\n                    arry[i][a]={//параметры клетки\r\n                        //кординаты клетки\r\n                        y:i,\r\n                        x:a,\r\n                        \r\n                        Bomb:false,//наличие бомбы\r\n                        Number:0,//кличество бомб вокруг\r\n                        CanBeBomb:true,//можеь ли быть бомбой (только для первого нажатия по полю)\r\n                        ClassB:\"but\",//графическое отображения кнопки\r\n                        count:0,\r\n                        Flag:false,//флажок для сапера\r\n                        Mis:false\r\n                    }\r\n            this.setState({//обнуляем все значения на тот случай если до этого мы уже создавали игру\r\n                        //и могли нормально начать сначала\r\n                Array:arry,\r\n                firstClick:true,\r\n                SpaseLeft:\"\",\r\n                faile:false,\r\n                win:false,\r\n                \r\n            });\r\n            this.ComandWatch(\"STOP\")//останавливаем таймер если мы пересоздаем игру\r\n            \r\n            \r\n        }\r\n    }\r\n    \r\n    ClickOnBut=(y, x)=>//здесь мы отслеживаем нажатия по кнопкам\r\n    {   \r\n        if(!this.state.doubleclick){//здесь мы проверяем дбл клик\r\n            this.setState({ \r\n                doubleclick:true,\r\n            });\r\n            setTimeout(() => { // принажатии doubleclick:true\r\n                if(this.state.doubleclick){//если в течении 200 млсек небудет еще одного нажатия \r\n                                            //то дбл клик не защитается \r\n                                            //и будет выполнена обычная проверка ячейки\r\n                                            //Проверка\r\n                    let arry=this.state.Array\r\n                    if(this.state.firstClick){//проверка на первый клик по полю\r\n                        arry[y][x].CanBeBomb=false\r\n                        arry[y][x].ClassB=\"butCliked\"\r\n                        this.CreateBomb(arry)//если это самый первый килк по полю то запускается CreateBomb() \r\n                                                //прейдите чтобы глянуть\r\n                    }\r\n                    else{\r\n                        if(!this.state.win){//если єто не первый клик то идет проверка на победу и пражения\r\n                            if(!this.state.faile){// если инрок выиграл либо проиграл его клики уже не засчитыватся\r\n                                if(arry[y][x].Bomb){//дальше если кнопка бомба\r\n                                    arry[y][x].ClassB=\"butBomb\"//ну она отображается как бомба\r\n                                    for(let i = 0 ;i<this.state.textSize;i++)// открывается сразу все поле\r\n                                        for(let a = 0 ;a<this.state.textSize;a++)\r\n                                            if(arry[i][a].Bomb)\r\n                                                arry[i][a].ClassB=\"butBomb\"\r\n                                            else{\r\n                                                arry[i][a].ClassB=\"butCliked\"\r\n                                            }\r\n                                    this.setState({ //засчитыватся поражения\r\n                                        Array:arry,\r\n                                        faile:true\r\n                                    });\r\n                                    this.Save()//записывает ваш результат\r\n                                    this.ComandWatch(\"STOP\")//и стопит таймер\r\n                                    \r\n                                }\r\n                                else if(arry[y][x].Flag){//если стоит флажок то он просто снимается \r\n                                    arry[y][x].ClassB=\"but\"\r\n                                    arry[y][x].Flag=false\r\n                                    this.setState({ \r\n                                        Array:arry,\r\n                                    });\r\n                                }\r\n                                else{\r\n                                    if(arry[y][x].ClassB!==\"butCliked\"){//если SpaseLeft===1\r\n                                        arry[y][x].ClassB=\"butCliked\"//то это последняя свободная клетка в целом\r\n                                        if(this.state.SpaseLeft===1){// и засчитыватся победа\r\n                                            this.setState((prevstate) => {\r\n                                                return {\r\n                                                    win:true,\r\n                                                    Array:arry,\r\n                                                    SpaseLeft:prevstate.SpaseLeft-1\r\n                                                };\r\n                                            });\r\n                                            this.Save()//сейв результат\r\n                                            this.ComandWatch(\"STOP\")//стоп таймер\r\n                                            \r\n                                        }\r\n                                            \r\n                                        else{//если не то ни другое \r\n                                            this.setState((prevstate) => {// то квадратик просто отображается как \r\n                                                return {// нажатый, и выводит весь текст \r\n                                                    Array:arry,\r\n                                                    SpaseLeft:prevstate.SpaseLeft-1\r\n                                                };\r\n                                            });\r\n                                        } \r\n                                    }\r\n                                    \r\n                                       \r\n                                }\r\n                            }\r\n                        }\r\n                        \r\n                    }\r\n                    this.setState({ \r\n                        doubleclick:false,\r\n                    });\r\n                }\r\n          }, 200)\r\n        }\r\n        else{//но если всетаки в течении 200 млсек был нажат клик еще раз\r\n                let arry=this.state.Array// то активируется дбл клик и ставится флажок\r\n                if(this.state.firstClick){//правда если ячейка уже была нажата то флажок не ставится\r\n                    arry[y][x].CanBeBomb=false//и еще если это первое нажатия просто жмется кнопка\r\n                    arry[y][x].ClassB=\"butCliked\"\r\n                    this.CreateBomb(arry)\r\n                }\r\n                else{\r\n                    if(arry[y][x].ClassB!==\"butCliked\"){\r\n                        arry[y][x].ClassB=\"butFlag\"\r\n                        arry[y][x].Flag=true\r\n                        if(!arry[y][x].Bomb)\r\n                            arry[y][x].Mis=true\r\n                        this.setState({ \r\n                            Array:arry,\r\n                            doubleclick:false,\r\n                        });\r\n                    }\r\n                }\r\n        }    \r\n        \r\n    }\r\n\r\n    CreateBomb=(arry)=>{//Создания бомб на поле активируется при первом клике\r\n        let y\r\n        let x\r\n        for(let i = 0 ;i<this.state.textBomb;i++){//рандомно выбирается кординаты \r\n            y=Math.floor(Math.random() * Math.floor(this.state.textSize));\r\n            x=Math.floor(Math.random() * Math.floor(this.state.textSize));\r\n            if(arry[y][x].Bomb||!arry[y][x].CanBeBomb)//и ставится бомба, правда в том случае\r\n                i--;                                    // когда эта кордината не занята и CanBeBomb===true(такое есть только у самой первой ячейки которую нажмут)\r\n            else\r\n                {\r\n                    arry[y][x].Bomb=true\r\n                    if(x>0&y>0&y<this.state.textSize-1&x<this.state.textSize-1){//Дальше идет проверка всех бомб в\r\n                        arry[y][x+1].Number=arry[y][x+1].Number+1               //округе добавляется к их Number+1\r\n                        arry[y][x-1].Number=arry[y][x-1].Number+1               \r\n                        arry[y+1][x].Number=arry[y+1][x].Number+1\r\n                        arry[y-1][x].Number=arry[y-1][x].Number+1\r\n\r\n                        arry[y+1][x+1].Number=arry[y+1][x+1].Number+1\r\n                        arry[y-1][x+1].Number=arry[y-1][x+1].Number+1\r\n\r\n                        arry[y-1][x-1].Number=arry[y-1][x-1].Number+1\r\n                        arry[y+1][x-1].Number=arry[y+1][x-1].Number+1\r\n                    }\r\n                    else if(x===0&y>0&y<this.state.textSize-1&x<this.state.textSize-1){\r\n                        arry[y][x+1].Number=arry[y][x+1].Number+1\r\n                        arry[y+1][x].Number=arry[y+1][x].Number+1\r\n                        arry[y-1][x].Number=arry[y-1][x].Number+1\r\n                        arry[y+1][x+1].Number=arry[y+1][x+1].Number+1\r\n                        arry[y-1][x+1].Number=arry[y-1][x+1].Number+1\r\n                    }\r\n                    else if(x>0&y>0&y<this.state.textSize-1&x===this.state.textSize-1){\r\n                        arry[y][x-1].Number=arry[y][x-1].Number+1\r\n                        arry[y+1][x].Number=arry[y+1][x].Number+1\r\n                        arry[y-1][x].Number=arry[y-1][x].Number+1\r\n                        arry[y-1][x-1].Number=arry[y-1][x-1].Number+1\r\n                        arry[y+1][x-1].Number=arry[y+1][x-1].Number+1\r\n                    }\r\n                    else if(x>0&y===0&y<this.state.textSize-1&x<this.state.textSize-1){\r\n                        arry[y][x+1].Number=arry[y][x+1].Number+1\r\n                        arry[y][x-1].Number=arry[y][x-1].Number+1\r\n                        arry[y+1][x].Number=arry[y+1][x].Number+1\r\n                        arry[y+1][x-1].Number=arry[y+1][x-1].Number+1\r\n                        arry[y+1][x+1].Number=arry[y+1][x+1].Number+1\r\n                    }\r\n                    else if(x>0&y>0&y===this.state.textSize-1&x<this.state.textSize-1){\r\n                        arry[y][x+1].Number=arry[y][x+1].Number+1\r\n                        arry[y][x-1].Number=arry[y][x-1].Number+1\r\n                        arry[y-1][x].Number=arry[y-1][x].Number+1\r\n                        arry[y-1][x+1].Number=arry[y-1][x+1].Number+1\r\n                        arry[y-1][x-1].Number=arry[y-1][x-1].Number+1\r\n                    }\r\n                    else if(x===0&y===0&y<this.state.textSize-1&x<this.state.textSize-1){\r\n                        arry[y][x+1].Number=arry[y][x+1].Number+1\r\n                        arry[y+1][x].Number=arry[y+1][x].Number+1\r\n                        arry[y+1][x+1].Number=arry[y+1][x+1].Number+1\r\n                    }\r\n                    else if(x>0&y>0&y===this.state.textSize-1&x===this.state.textSize-1){\r\n                        arry[y][x-1].Number=arry[y][x-1].Number+1\r\n                        arry[y-1][x].Number=arry[y-1][x].Number+1\r\n                        arry[y-1][x-1].Number=arry[y-1][x-1].Number+1\r\n                    }\r\n                    else if(x===0&y>0&y===this.state.textSize-1&x<this.state.textSize-1){\r\n                        arry[y][x+1].Number=arry[y][x+1].Number+1\r\n                        arry[y-1][x].Number=arry[y-1][x].Number+1\r\n                        arry[y-1][x+1].Number=arry[y-1][x+1].Number+1\r\n                    }\r\n                    else if(x>0&y===0&y<this.state.textSize-1&x===this.state.textSize-1){\r\n                        arry[y][x-1].Number=arry[y][x-1].Number+1\r\n                        arry[y+1][x].Number=arry[y+1][x].Number+1\r\n                        arry[y+1][x-1].Number=arry[y+1][x-1].Number+1\r\n                    }\r\n                }\r\n                this.setState((prevstate) => {\r\n                    return {//перезапись масива\r\n                        Array:arry,\r\n                        SpaseLeft:prevstate.textSize*prevstate.textSize-prevstate.textBomb-1,\r\n                        firstClick:false,\r\n                    };\r\n                  });\r\n                  this.ComandWatch(\"START\")//и запускаем таймер\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"Sapper\">\r\n                <div className=\"Create_Array\">\r\n                    <div className=\"row_Array\">\r\n                        ARRAY SIZE <input type='number' value={this.state.textSize} onChange={this.tapS}></input>\r\n                    </div>\r\n                    <div className=\"row_Array\">\r\n                        NUMBER OF BOMBS <input type='number' value={this.state.textBomb} onChange={this.tapB}></input>\r\n                    </div>\r\n                    <div className={this.state.atantion}>\r\n                        SIZE HEVE TO BE BETWEEN 5 AND 15 AND NUMBER OF BOMB CANT BE MORE THEN SIZE\r\n                        <br/>\r\n                        Справа введите размер между 5 и 15, и количество бомб не больше размера деленного на 2 и не 0\r\n                    </div>\r\n                    <button onClick={this.CreateArray}>\r\n                        Create\r\n                    </button>\r\n                </div>\r\n                <div className=\"Array_Panel\">\r\n                    <div className=\"Timer_Array\">\r\n                        {this.state.hour}:{this.state.min}:{this.state.second}\r\n                    </div>\r\n                    <div className=\"Timer_Array\">\r\n                        {!this.state.faile?(!this.state.win?(this.state.SpaseLeft===\"\"?\"\":\"К победе осталось \"+this.state.SpaseLeft):\"Вы выиграли, начинайте сначала\"):\"Вы проиграли, начинайте сначала\"}\r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"Array\">\r\n                        {\r\n                            \r\n                            this.state.Array.map((items)=>(\r\n                                <div className=\"but_row\" key={items[0].y}>\r\n                                    \r\n                                    {\r\n                                        \r\n                                        items.map((item)=>(\r\n                                            <div key={item.y+\" \"+item.x} className={item.ClassB} onClick={()=>this.ClickOnBut(item.y, item.x)}>\r\n                                                {item.ClassB===\"butCliked\"?(item.Number===0?\"\":item.Number):\"\"}\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                                \r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <div  className=\"Timer_Array\">\r\n                    {\r\n                        this.state.list.map((key)=>(\r\n                            <div key={key.time}>\r\n                                {key.time}\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n          );\r\n    }\r\n  \r\n}\r\n\r\nexport default Sapper;\r\n","import React from 'react';\r\nimport Sapper from '../../JScomponents/sapper/Sapper'\r\nimport './SaperPage.css'\r\n\r\n\r\nfunction SaperPage() {\r\n  return (\r\n    <div className=\"SaperPage\">\r\n        <Sapper/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SaperPage;\r\n","import React from 'react';\r\nimport{Route} from \"react-router-dom\"\r\nimport Home from '../../Pages/Home/Home'\r\nimport Stopwatchpro from '../../Pages/Stopwatchpro/Stopwatchpro'\r\nimport SapperPage from '../../Pages/SapperPage/SaperPage'\r\n\r\nfunction MeinMenu() {\r\n  return (\r\n    \r\n    <div className=\"MeinManu\">\r\n      {\r\n        /*\r\n          Иза того что я уже вам делал именно это тестовое задание (на позицию мидл)\r\n          то здесь я решил добавитьеще коечто от себя (а именно улучшенный секундомер, и сапер с таймером)\r\n          просто сдавать одно и тоже как-то не культурно и при попытке связатся с HR у меня не получилось дозвонится\r\n          и так получилось что когда комне звонили я немог взять трубку ну и праздники начались.\r\n          если вас интересует только сам Секундомер (ТЗ) то переходите по пути src/JScomponents/stopwatch/stopwatch\r\n          Сам он вызывается с Компонента Home\r\n        */\r\n      }\r\n        <Route exact path=\"/\" render={()=>(<Home/>)//тут ТЗ\r\n      }/>\r\n        <Route path=\"/stopwatchpro\" render={Stopwatchpro}/>\r\n        <Route path=\"/sapper\" render={SapperPage}/>\r\n        \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default MeinMenu;\r\n","import React,{Component} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport './Header.css'\r\n\r\n\r\n\r\nclass Header extends Component{   \r\n    render(){\r\n        return (\r\n            <div className=\"Header\">\r\n              <Link to=\"/\">\r\n                    <div className=\"LinkPage\">\r\n                        Stopwatch\r\n                    </div>\r\n              </Link> \r\n              <Link to=\"/stopwatchpro\">\r\n                <div className=\"LinkPage\">\r\n                    Stopwatch Pro\r\n                </div>\r\n              </Link>\r\n              \r\n              <Link to=\"/sapper\">\r\n                <div className=\"LinkPage\">\r\n                        Sapper\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport MeinMenu from '..//layouts/MeinMenu/MeinMenu'\nimport '../common/style/main.css'\nimport Header from '../layouts/Header/Header'\n\n\nfunction App() {\n  return (\n    <div>\n      <Header/>\n      <MeinMenu/>{//Здесь вызываем все наши компоненты\n      }\n      \n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}